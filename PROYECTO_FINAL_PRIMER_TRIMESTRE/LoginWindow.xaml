<Window x:Class="PROYECTO_FINAL_PRIMER_TRIMESTRE.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PROYECTO_FINAL_PRIMER_TRIMESTRE"
        mc:Ignorable="d"
        Title="Login" Height="650" Width="500" WindowStartupLocation="CenterScreen">
    <!--PERMITIMOS RESIZEAR AL USUARIO PORQUE TENEMOS RESPONSIVE, SE VA A VER DE LA MISMA FORMA ESTÉ EN LA VENTANA QUE ESTÉ GRACIAS AL ViewBox Strech="Uniform"-->
    <Window.Background>
        <!--EL BACKGROUND ESTÁ COMPUESTO POR UN GRADIENTE QUE VA DESDE ARRIBA IZQ AZUL CLARITO HASTA ABAJO DCH KHAKI (0.0->1.1)-->
        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#F3E2A9" Offset="0.0"></GradientStop>
            <GradientStop Color="#FFF9E6" Offset="1.0"></GradientStop>
        </LinearGradientBrush>
    </Window.Background>

    <Window.Resources>
        <!-- COMO SIEMPRE, ABRIMOS Window.Resources PARA APLICAR EFECTOS Y ESTILOS ESPECIALES
        A TODOS LOS ELEMENTOS QUE TENGO EN LA VENTANA. 
        
        EFECTOS DE SOMBREADO CON DropShadowEffect, BLUR A 10 PARA DISTORSIONAR LA SOMBRA Y QUE SE VEA MÁS REALISTA
        SHADOWDEPTH SERÁ LA PROFUNDIDAD DE LA SOMBRA, ENTRE 4 Y 8 ESTÁ BIEN, MÁS ES DEMASIADO. LA SOMBRA PUEDE TENER SU PROPIO COLOR-->
        <DropShadowEffect x:Key="ShadowEffect" BlurRadius="10" ShadowDepth="5" Opacity="0.5" Color="Black"></DropShadowEffect>

        <!--ESTILO PARA LAS CAJAS DE TEXTO, TEXTBOX Y PASSBOX
        PARA ELLO SIEMPRE ABRIMOS STYLE, LE DAMOS EL TARGET (EN ESTE CASO TextBox y PasswordBox) Y LE AÑADIMOS LAS PROPIEDADES QUE DESEAMOS
        PARA APLICAR LOS EFECTOS FINALMENTE METEMOS UN Property="Effect" Value="{StaticResource ShadowEffect}" QUE RECOGEREMOS DE RESOURCES PORQUE ESTAMOS DENTRO DE
        "WINDOW RESOURCES" Y ARRIBA HEMOS APLICADO DropShadowEffect, BLUR, SHADOWDEPTH, OPACIDAD Y COLOR. SINO NO SE APLICARÁ EL EFECTO DE SOMBRA-->
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="0,0,0,10"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Effect" Value="{StaticResource ShadowEffect}"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray"></Setter>
                    <!-- CON Style.Triggers LO QUE HACEMOS ES DARLE LA CARACTERÍSTICA DE "TRIGGER", LA TRADUCCIÓN SERÍA "DESENCADENAR", HACEMOS QUE EL BOTÓN
                    TAMBIÉN ESCUCHE EFECTOS, EN ESTE CASO LA PROPIEDAD DE "IsMouseOver" PARA QUE AL PASAR EL RATÓN SEA CUANDO SE ACTIVE
                    EN ESTE CASO LE DAMOS UN COLOR AL BORDE, Y LE APLICAMOS UN TAMAÑO MAYOR PARA QUE SE NOTE Y UN COLOR
                    Elimino el tamaño, queda feo-->
                    <Setter Property="BorderBrush" Value="LightBlue"></Setter>
                    <Setter Property="BorderThickness" Value="1"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Margin" Value="0,0,0,10"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Effect" Value="{StaticResource ShadowEffect}"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray"></Setter>
                    <!-- VOLVEMOS A METER EL MISMO EFECTO EFECTO PERO CON OTRO COLOR PARA LA CAJA PASS-->
                    <Setter Property="BorderBrush" Value="Aqua"></Setter>
                    <Setter Property="BorderThickness" Value="1"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ESTILOS-BOTONES -->
        <Style TargetType="Button">
            <Setter Property="Margin" Value="10,0,0,0"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <!-- SI QUEREMOS APLICAR UN GRADIENTE DE COLORES, LO HACEMOS IGUAL QUE EN EL BACKGROUND PERO DENTRO DE LA ETIQUETA
                    <Setter.Value>-->
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#7B68EE" Offset="0.0"></GradientStop>
                        <GradientStop Color="#48D1CC" Offset="1.0"></GradientStop>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Effect" Value="{StaticResource ShadowEffect}"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="RenderTransform">
                <!-- BorderThickness ES COMO BORDER-RADIUS, REDONDEA LAS ESQUINAS. RenderTransform ME PERMITIRÁ MODIFICAR LA UBICACIÓN DE LOS BOTONES
                QUE EN ESTE CASO ES DONDE ESTÁN COLOCADOS EN EL GRID (x=0, y=0) POR QUÉ HAGO ESTO? PORQUE VOY A APLICAR UNA ANIMACIÓN DE ENTRADA DE LOS BOTONES
                QUE EMPEZARÁN EN OTRAS COORDENADAS DISTINTAS, PERO ACABARÁN EN 0,0
                Igual dentro de la etiqueta de <Setter.Value>-->
                <Setter.Value>
                    <TranslateTransform X="0" Y="0"></TranslateTransform>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <!-- CON LA PROPIEDAD TEMPLATE, LE ESTAMOS ABRIENDO UNA ESPECIE DE PLANTILLA PARA PERSONALIZAR AL BOTÓN,
                SETEAMOS VALORES AL TARGET ELEGIDO (BOTONES, TODOS A LA VEZ)-->
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5">
                            <!--LE DOY BORDE A TODOS LOS BOTONES, PARA APLIAR EFECTOS DE SALTO...
                            CON TemplateBinding Background LE ESTOY DICIENDO QUE MÁS ADELANTE, LE PUEDO DEFINIR UN COLOR, QUE PUEDE VARIAR SU COLOR, VAYA
                            CREO QUE APLICARÉ UN LINEAR EN ARMONÍA CON EL FONDO Y LA IMAGEN
                            ç
                            Al final no he aplicado este efecto de pisada-->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- AQUÍ EMPIEZAN LAS CARACTERÍSTICAS DEL HOVER, LE CAMBIARÉ DOS PROPIEDADES, EL COLOR BACKGROUND Y EL DE LAS LETRAS (FOREGROUND) -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="Orange" Offset="0.0"></GradientStop>
                                            <GradientStop Color="SaddleBrown" Offset="1.0"></GradientStop>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <!-- CMO LAS LETRAS DE LOS BOTONES NO SE VEN BIEN LAS CAMBIO A NEGRO CUANDO PASA EL RATÓN X ENCIMA -->
                                <Setter Property="Foreground" Value="Black"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ANIMACIONES DE ENTRADA
        
        EL FUNCIONAMIENTO DE "Storyboard" ES EL DE AGRUPAR Y COORDINAR ANIMACIONES (EN ESTE CASO APLICAMOS UNA PERO PUEDE TENER VARIAS, TANTAS DoubleAnimation COMO QUIERA)
        ES COMO UN CONTENEDOR DE ANIMACIONES (COMO EL STACKPANEL CONTIENE ELMENETOS)
        DoubleAnimation ES EL ATRIBUTO QUE SE USA PARA ANIMAR PROPIEDADES QUE CONTIENEN VALORES DEL TIPO "Double" COM EN ESTE CASO SON LAS COORDENADAS
        DENTRO DE DOUBLEANIMATION, LE DECIMOS AL CONTENEDOR QUÉ TARGET QUEREMOS, EN ESTE CASO ES EL DE RENDERTRANSFORM QUE MÁS ARRIBA DEFINIMOS COMO "PROPERTY" DE
        LOS BOTONES. TODO SIEMPRE EMPIEZA CON "(UIElement.______) LE DECIMOS QUE QUEREMOS APLICAR LA PROPIEDAD DE RenderTransform Y LE DECIMOS QUÉ EJE O EJES TRANSFORMAMOS
        EN ESTE CASO SOLAMENTE APLICO 1. LA PRIMERA SE DESPLAZARÁ DESDE ARRIBA (Y=-100 A Y=0) LA SEGUNDA DESDE LA IZQUIERDA, DESDE -300X Y LA TERCERA DESDE Y=+100 
        LE DEDCIMOS QUE TARDE 1 SEGUNDO EN HACERLO
        ESTOS VALORES DE "From" DEBEN SER EXACTAMENTE LOS MISMOS QUE LOS QUE DEFINEN SU POSICIÓN EN SU INSTANCIACIÓIN ABAJO-->
        <Storyboard x:Key="BotonEntradaDesdeArriba">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" From="-100" To="0" Duration="0:0:1"></DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="BotonEntradaDesdeIzquierda">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" From="-300" To="0" Duration="0:0:1"></DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="BotonEntradaDesdeAbajo">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" From="100" To="0" Duration="0:0:1"></DoubleAnimation>
        </Storyboard>
    </Window.Resources>
<!--CERRAMOS Window.Resources PORQUE YA HEMOS ALPICADO TODOS LOS EFECTOS Y ESTILOS QUE QUERÍAMOS PRA TODOS LOS ELEMENTOS DE LA VENTANA-->

    <Viewbox Stretch="Uniform">
        <!--IMPORTANTISIMO ESTE VIEWBOX PARA APLICAR RESPONSIVIDAD-->
        <Grid Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="209.139"></RowDefinition>
                <RowDefinition Height="60.861"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <!-- IMAGEN -->
            <Image Source="/logo.png" Margin="0,0,0,20" Grid.Row="0" Stretch="Uniform" Grid.RowSpan="2" Opacity="0.8"></Image>
            <!-- LABELS+CAJAS-->
            <TextBlock Text="Usuario" Grid.Row="2" Margin="0,0,0,5" Foreground="Black" FontSize="18"></TextBlock>
            <TextBox Name="cajaUsuario" Grid.Row="3" Height="50" FontSize="26" Margin="0,0,0,10"></TextBox>
            <TextBlock Text="Contraseña" Grid.Row="4" Margin="0,10,0,5" Foreground="Black" FontSize="18"></TextBlock>
            <PasswordBox Name="cajaPass" Grid.Row="5" Height="50" FontSize="26" Margin="0,0,0,10"></PasswordBox>
            
            <!--RECORDAR Y BOTONES DENTRO DE ESTE STACKPANE -->
            <StackPanel Grid.Row="6" Orientation="Horizontal" VerticalAlignment="Top" Margin="0,10,0,0">
                <CheckBox Name="RecordarCheckBox" Content="Recordar" Margin="0,0,10,0" Foreground="Black" FontSize="14"></CheckBox>

                <!-- CONECTAR -->
                <Button Name="botonConectar" FontSize="15" Content="Conectar" Width="75" Height="50" Click="botonConectar_Click" RenderTransformOrigin="0.5,0.5">
                    <!--AHORA TENEMOS Q DECIRLE A LOS BOTONES, LLAMANDO A SU PROPIEDAD O FUNCIÓN .RenderTransform CUÁL VA A SER SU ORIGEN AL ABRIR LA VENTANA
                    LE DAMOS EL MISMO VALOR QUE LE DIMOS A LA DoubleAnimation Y -->
                    <Button.RenderTransform>
                        <TranslateTransform X="0" Y="-100"></TranslateTransform>
                    </Button.RenderTransform>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Loaded">
                            <!--Q SIGNIFICA RoutedEvent="Button.Loaded"??
                            PUES SIMPLEMENTE ESTAMOS AVISANDO AL TRIGGER, QUE EL EVENTO SE PRODUZCA UNA VEZ QUE EL BOTÓN HAYA "CARGADO" Y ESTÉ VISIBLE EN LA VENTANA
                            ES DECIR, SI UN PC ES LENTO Y TARDA EN CARGAR LOS ELEMENTOS UNA DISTANCIA NOTABLE DE TIEMPO, PODRÍA DAR PROBLEMAS, ESPERAMOS A QUE SE VEA
                            ANTES DE DECIRLE Q APLICAMOS SU STORYBOARD DEBAJO-->
                            <BeginStoryboard Storyboard="{StaticResource BotonEntradaDesdeArriba}"></BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>

                <!-- CAMBIAR PASS -->
                <Button Name="botonCambiarPass" FontSize="15" Content="Cambiar contraseña" Width="150" Click="botonCambiarContraseña_Click" RenderTransformOrigin="0.5,0.5">
                    <Button.RenderTransform>
                        <TranslateTransform X="-300" Y="0"></TranslateTransform>
                    </Button.RenderTransform>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Loaded">
                            <BeginStoryboard Storyboard="{StaticResource BotonEntradaDesdeIzquierda}"></BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>

                <!-- RECUPERAR PASS -->
                <Button Name="botonRecuperarPass" FontSize="15" Content="Recuperar contraseña" Width="150" Click="botonRecuperarPass_Click" RenderTransformOrigin="0.5,0.5">
                    <Button.RenderTransform>
                        <TranslateTransform X="0" Y="100"></TranslateTransform>
                    </Button.RenderTransform>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Loaded">
                            <BeginStoryboard Storyboard="{StaticResource BotonEntradaDesdeAbajo}"></BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
            </StackPanel>
        </Grid>
    </Viewbox>
</Window>
